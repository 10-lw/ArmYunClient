// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ControlAVFmt extends Table {
  public static ControlAVFmt getRootAsControlAVFmt(ByteBuffer _bb) { return getRootAsControlAVFmt(_bb, new ControlAVFmt()); }
  public static ControlAVFmt getRootAsControlAVFmt(ByteBuffer _bb, ControlAVFmt obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ControlAVFmt __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int afmt() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int aprofile() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int achannel() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 2; }
  public int asmprate() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 44100; }
  public long abitrate() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 131072L; }
  public int vfmt() { int o = __offset(14); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int vprofile() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int vwidth() { int o = __offset(18); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 1024; }
  public int vheight() { int o = __offset(20); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 576; }
  public int vfps() { int o = __offset(22); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 30; }
  public long vbitrate() { int o = __offset(24); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 5242880L; }

  public static int createControlAVFmt(FlatBufferBuilder builder,
      int afmt,
      int aprofile,
      int achannel,
      int asmprate,
      long abitrate,
      int vfmt,
      int vprofile,
      int vwidth,
      int vheight,
      int vfps,
      long vbitrate) {
    builder.startObject(11);
    ControlAVFmt.addVbitrate(builder, vbitrate);
    ControlAVFmt.addAbitrate(builder, abitrate);
    ControlAVFmt.addVfps(builder, vfps);
    ControlAVFmt.addVheight(builder, vheight);
    ControlAVFmt.addVwidth(builder, vwidth);
    ControlAVFmt.addAsmprate(builder, asmprate);
    ControlAVFmt.addVprofile(builder, vprofile);
    ControlAVFmt.addVfmt(builder, vfmt);
    ControlAVFmt.addAchannel(builder, achannel);
    ControlAVFmt.addAprofile(builder, aprofile);
    ControlAVFmt.addAfmt(builder, afmt);
    return ControlAVFmt.endControlAVFmt(builder);
  }

  public static void startControlAVFmt(FlatBufferBuilder builder) { builder.startObject(11); }
  public static void addAfmt(FlatBufferBuilder builder, int afmt) { builder.addByte(0, (byte)afmt, (byte)0); }
  public static void addAprofile(FlatBufferBuilder builder, int aprofile) { builder.addByte(1, (byte)aprofile, (byte)0); }
  public static void addAchannel(FlatBufferBuilder builder, int achannel) { builder.addByte(2, (byte)achannel, (byte)2); }
  public static void addAsmprate(FlatBufferBuilder builder, int asmprate) { builder.addShort(3, (short)asmprate, (short)44100); }
  public static void addAbitrate(FlatBufferBuilder builder, long abitrate) { builder.addInt(4, (int)abitrate, (int)131072L); }
  public static void addVfmt(FlatBufferBuilder builder, int vfmt) { builder.addByte(5, (byte)vfmt, (byte)0); }
  public static void addVprofile(FlatBufferBuilder builder, int vprofile) { builder.addByte(6, (byte)vprofile, (byte)0); }
  public static void addVwidth(FlatBufferBuilder builder, int vwidth) { builder.addShort(7, (short)vwidth, (short)1024); }
  public static void addVheight(FlatBufferBuilder builder, int vheight) { builder.addShort(8, (short)vheight, (short)576); }
  public static void addVfps(FlatBufferBuilder builder, int vfps) { builder.addShort(9, (short)vfps, (short)30); }
  public static void addVbitrate(FlatBufferBuilder builder, long vbitrate) { builder.addInt(10, (int)vbitrate, (int)5242880L); }
  public static int endControlAVFmt(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

