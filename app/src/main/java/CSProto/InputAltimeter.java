// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class InputAltimeter extends Table {
  public static InputAltimeter getRootAsInputAltimeter(ByteBuffer _bb) { return getRootAsInputAltimeter(_bb, new InputAltimeter()); }
  public static InputAltimeter getRootAsInputAltimeter(ByteBuffer _bb, InputAltimeter obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public InputAltimeter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float altitude() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float pressure() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createInputAltimeter(FlatBufferBuilder builder,
      float altitude,
      float pressure) {
    builder.startObject(2);
    InputAltimeter.addPressure(builder, pressure);
    InputAltimeter.addAltitude(builder, altitude);
    return InputAltimeter.endInputAltimeter(builder);
  }

  public static void startInputAltimeter(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addAltitude(FlatBufferBuilder builder, float altitude) { builder.addFloat(0, altitude, 0.0f); }
  public static void addPressure(FlatBufferBuilder builder, float pressure) { builder.addFloat(1, pressure, 0.0f); }
  public static int endInputAltimeter(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

