// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class InputMouseWheel extends Table {
  public static InputMouseWheel getRootAsInputMouseWheel(ByteBuffer _bb) { return getRootAsInputMouseWheel(_bb, new InputMouseWheel()); }
  public static InputMouseWheel getRootAsInputMouseWheel(ByteBuffer _bb, InputMouseWheel obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public InputMouseWheel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short x() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short y() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createInputMouseWheel(FlatBufferBuilder builder,
      short x,
      short y) {
    builder.startObject(2);
    InputMouseWheel.addY(builder, y);
    InputMouseWheel.addX(builder, x);
    return InputMouseWheel.endInputMouseWheel(builder);
  }

  public static void startInputMouseWheel(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addX(FlatBufferBuilder builder, short x) { builder.addShort(0, x, 0); }
  public static void addY(FlatBufferBuilder builder, short y) { builder.addShort(1, y, 0); }
  public static int endInputMouseWheel(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

