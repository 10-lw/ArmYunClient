// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ControlTime extends Table {
  public static ControlTime getRootAsControlTime(ByteBuffer _bb) { return getRootAsControlTime(_bb, new ControlTime()); }
  public static ControlTime getRootAsControlTime(ByteBuffer _bb, ControlTime obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ControlTime __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int time() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createControlTime(FlatBufferBuilder builder,
      int time) {
    builder.startObject(1);
    ControlTime.addTime(builder, time);
    return ControlTime.endControlTime(builder);
  }

  public static void startControlTime(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addTime(FlatBufferBuilder builder, int time) { builder.addInt(0, time, 0); }
  public static int endControlTime(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

