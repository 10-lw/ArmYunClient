// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class OutputVibration extends Table {
  public static OutputVibration getRootAsOutputVibration(ByteBuffer _bb) { return getRootAsOutputVibration(_bb, new OutputVibration()); }
  public static OutputVibration getRootAsOutputVibration(ByteBuffer _bb, OutputVibration obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public OutputVibration __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int l() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int r() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }

  public static int createOutputVibration(FlatBufferBuilder builder,
      int l,
      int r) {
    builder.startObject(2);
    OutputVibration.addR(builder, r);
    OutputVibration.addL(builder, l);
    return OutputVibration.endOutputVibration(builder);
  }

  public static void startOutputVibration(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addL(FlatBufferBuilder builder, int l) { builder.addShort(0, (short)l, (short)0); }
  public static void addR(FlatBufferBuilder builder, int r) { builder.addShort(1, (short)r, (short)0); }
  public static int endOutputVibration(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

