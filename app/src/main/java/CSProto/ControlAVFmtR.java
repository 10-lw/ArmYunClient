// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ControlAVFmtR extends Table {
  public static ControlAVFmtR getRootAsControlAVFmtR(ByteBuffer _bb) { return getRootAsControlAVFmtR(_bb, new ControlAVFmtR()); }
  public static ControlAVFmtR getRootAsControlAVFmtR(ByteBuffer _bb, ControlAVFmtR obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ControlAVFmtR __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int code() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String msg() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer msgInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int afmt() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int aprofile() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int achannel() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 2; }
  public long asmprate() { int o = __offset(14); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 44100L; }
  public long abitrate() { int o = __offset(16); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 131072L; }
  public int vfmt() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int vprofile() { int o = __offset(20); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int vwidth() { int o = __offset(22); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 1024; }
  public int vheight() { int o = __offset(24); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 576; }
  public int vfps() { int o = __offset(26); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 30; }
  public long vbitrate() { int o = __offset(28); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 5242880L; }

  public static int createControlAVFmtR(FlatBufferBuilder builder,
      int code,
      int msgOffset,
      int afmt,
      int aprofile,
      int achannel,
      long asmprate,
      long abitrate,
      int vfmt,
      int vprofile,
      int vwidth,
      int vheight,
      int vfps,
      long vbitrate) {
    builder.startObject(13);
    ControlAVFmtR.addVbitrate(builder, vbitrate);
    ControlAVFmtR.addAbitrate(builder, abitrate);
    ControlAVFmtR.addAsmprate(builder, asmprate);
    ControlAVFmtR.addMsg(builder, msgOffset);
    ControlAVFmtR.addCode(builder, code);
    ControlAVFmtR.addVfps(builder, vfps);
    ControlAVFmtR.addVheight(builder, vheight);
    ControlAVFmtR.addVwidth(builder, vwidth);
    ControlAVFmtR.addVprofile(builder, vprofile);
    ControlAVFmtR.addVfmt(builder, vfmt);
    ControlAVFmtR.addAchannel(builder, achannel);
    ControlAVFmtR.addAprofile(builder, aprofile);
    ControlAVFmtR.addAfmt(builder, afmt);
    return ControlAVFmtR.endControlAVFmtR(builder);
  }

  public static void startControlAVFmtR(FlatBufferBuilder builder) { builder.startObject(13); }
  public static void addCode(FlatBufferBuilder builder, int code) { builder.addInt(0, code, 0); }
  public static void addMsg(FlatBufferBuilder builder, int msgOffset) { builder.addOffset(1, msgOffset, 0); }
  public static void addAfmt(FlatBufferBuilder builder, int afmt) { builder.addByte(2, (byte)afmt, (byte)0); }
  public static void addAprofile(FlatBufferBuilder builder, int aprofile) { builder.addByte(3, (byte)aprofile, (byte)0); }
  public static void addAchannel(FlatBufferBuilder builder, int achannel) { builder.addByte(4, (byte)achannel, (byte)2); }
  public static void addAsmprate(FlatBufferBuilder builder, long asmprate) { builder.addInt(5, (int)asmprate, (int)44100L); }
  public static void addAbitrate(FlatBufferBuilder builder, long abitrate) { builder.addInt(6, (int)abitrate, (int)131072L); }
  public static void addVfmt(FlatBufferBuilder builder, int vfmt) { builder.addByte(7, (byte)vfmt, (byte)0); }
  public static void addVprofile(FlatBufferBuilder builder, int vprofile) { builder.addByte(8, (byte)vprofile, (byte)0); }
  public static void addVwidth(FlatBufferBuilder builder, int vwidth) { builder.addShort(9, (short)vwidth, (short)1024); }
  public static void addVheight(FlatBufferBuilder builder, int vheight) { builder.addShort(10, (short)vheight, (short)576); }
  public static void addVfps(FlatBufferBuilder builder, int vfps) { builder.addShort(11, (short)vfps, (short)30); }
  public static void addVbitrate(FlatBufferBuilder builder, long vbitrate) { builder.addInt(12, (int)vbitrate, (int)5242880L); }
  public static int endControlAVFmtR(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

