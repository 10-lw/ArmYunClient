// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class InputGameController extends Table {
  public static InputGameController getRootAsInputGameController(ByteBuffer _bb) { return getRootAsInputGameController(_bb, new InputGameController()); }
  public static InputGameController getRootAsInputGameController(ByteBuffer _bb, InputGameController obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public InputGameController __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int index() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int buttons() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int lt() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int rt() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public short lx() { int o = __offset(12); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short ly() { int o = __offset(14); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short rx() { int o = __offset(16); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short ry() { int o = __offset(18); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createInputGameController(FlatBufferBuilder builder,
      int index,
      int buttons,
      int lt,
      int rt,
      short lx,
      short ly,
      short rx,
      short ry) {
    builder.startObject(8);
    InputGameController.addRy(builder, ry);
    InputGameController.addRx(builder, rx);
    InputGameController.addLy(builder, ly);
    InputGameController.addLx(builder, lx);
    InputGameController.addButtons(builder, buttons);
    InputGameController.addRt(builder, rt);
    InputGameController.addLt(builder, lt);
    InputGameController.addIndex(builder, index);
    return InputGameController.endInputGameController(builder);
  }

  public static void startInputGameController(FlatBufferBuilder builder) { builder.startObject(8); }
  public static void addIndex(FlatBufferBuilder builder, int index) { builder.addByte(0, (byte)index, (byte)0); }
  public static void addButtons(FlatBufferBuilder builder, int buttons) { builder.addShort(1, (short)buttons, (short)0); }
  public static void addLt(FlatBufferBuilder builder, int lt) { builder.addByte(2, (byte)lt, (byte)0); }
  public static void addRt(FlatBufferBuilder builder, int rt) { builder.addByte(3, (byte)rt, (byte)0); }
  public static void addLx(FlatBufferBuilder builder, short lx) { builder.addShort(4, lx, 0); }
  public static void addLy(FlatBufferBuilder builder, short ly) { builder.addShort(5, ly, 0); }
  public static void addRx(FlatBufferBuilder builder, short rx) { builder.addShort(6, rx, 0); }
  public static void addRy(FlatBufferBuilder builder, short ry) { builder.addShort(7, ry, 0); }
  public static int endInputGameController(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

