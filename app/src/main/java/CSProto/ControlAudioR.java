// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ControlAudioR extends Table {
  public static ControlAudioR getRootAsControlAudioR(ByteBuffer _bb) { return getRootAsControlAudioR(_bb, new ControlAudioR()); }
  public static ControlAudioR getRootAsControlAudioR(ByteBuffer _bb, ControlAudioR obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ControlAudioR __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int code() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String msg() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer msgInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int profile() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int channel() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 2; }
  public long smprate() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 44100L; }
  public long bitrate() { int o = __offset(14); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 131072L; }

  public static int createControlAudioR(FlatBufferBuilder builder,
      int code,
      int msgOffset,
      int profile,
      int channel,
      long smprate,
      long bitrate) {
    builder.startObject(6);
    ControlAudioR.addBitrate(builder, bitrate);
    ControlAudioR.addSmprate(builder, smprate);
    ControlAudioR.addMsg(builder, msgOffset);
    ControlAudioR.addCode(builder, code);
    ControlAudioR.addChannel(builder, channel);
    ControlAudioR.addProfile(builder, profile);
    return ControlAudioR.endControlAudioR(builder);
  }

  public static void startControlAudioR(FlatBufferBuilder builder) { builder.startObject(6); }
  public static void addCode(FlatBufferBuilder builder, int code) { builder.addInt(0, code, 0); }
  public static void addMsg(FlatBufferBuilder builder, int msgOffset) { builder.addOffset(1, msgOffset, 0); }
  public static void addProfile(FlatBufferBuilder builder, int profile) { builder.addByte(2, (byte)profile, (byte)0); }
  public static void addChannel(FlatBufferBuilder builder, int channel) { builder.addByte(3, (byte)channel, (byte)2); }
  public static void addSmprate(FlatBufferBuilder builder, long smprate) { builder.addInt(4, (int)smprate, (int)44100L); }
  public static void addBitrate(FlatBufferBuilder builder, long bitrate) { builder.addInt(5, (int)bitrate, (int)131072L); }
  public static int endControlAudioR(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

