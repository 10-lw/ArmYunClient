// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ControlVideoR extends Table {
  public static ControlVideoR getRootAsControlVideoR(ByteBuffer _bb) { return getRootAsControlVideoR(_bb, new ControlVideoR()); }
  public static ControlVideoR getRootAsControlVideoR(ByteBuffer _bb, ControlVideoR obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ControlVideoR __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int code() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String msg() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer msgInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int profile() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int width() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 1024; }
  public int height() { int o = __offset(12); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 576; }
  public int fps() { int o = __offset(14); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 30; }
  public long bitrate() { int o = __offset(16); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 5242880L; }
  public int bitmode() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }

  public static int createControlVideoR(FlatBufferBuilder builder,
      int code,
      int msgOffset,
      int profile,
      int width,
      int height,
      int fps,
      long bitrate,
      int bitmode) {
    builder.startObject(8);
    ControlVideoR.addBitrate(builder, bitrate);
    ControlVideoR.addMsg(builder, msgOffset);
    ControlVideoR.addCode(builder, code);
    ControlVideoR.addFps(builder, fps);
    ControlVideoR.addHeight(builder, height);
    ControlVideoR.addWidth(builder, width);
    ControlVideoR.addBitmode(builder, bitmode);
    ControlVideoR.addProfile(builder, profile);
    return ControlVideoR.endControlVideoR(builder);
  }

  public static void startControlVideoR(FlatBufferBuilder builder) { builder.startObject(8); }
  public static void addCode(FlatBufferBuilder builder, int code) { builder.addInt(0, code, 0); }
  public static void addMsg(FlatBufferBuilder builder, int msgOffset) { builder.addOffset(1, msgOffset, 0); }
  public static void addProfile(FlatBufferBuilder builder, int profile) { builder.addByte(2, (byte)profile, (byte)0); }
  public static void addWidth(FlatBufferBuilder builder, int width) { builder.addShort(3, (short)width, (short)1024); }
  public static void addHeight(FlatBufferBuilder builder, int height) { builder.addShort(4, (short)height, (short)576); }
  public static void addFps(FlatBufferBuilder builder, int fps) { builder.addShort(5, (short)fps, (short)30); }
  public static void addBitrate(FlatBufferBuilder builder, long bitrate) { builder.addInt(6, (int)bitrate, (int)5242880L); }
  public static void addBitmode(FlatBufferBuilder builder, int bitmode) { builder.addByte(7, (byte)bitmode, (byte)0); }
  public static int endControlVideoR(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

