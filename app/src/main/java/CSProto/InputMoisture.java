// automatically generated by the FlatBuffers compiler, do not modify

package CSProto;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class InputMoisture extends Table {
  public static InputMoisture getRootAsInputMoisture(ByteBuffer _bb) { return getRootAsInputMoisture(_bb, new InputMoisture()); }
  public static InputMoisture getRootAsInputMoisture(ByteBuffer _bb, InputMoisture obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public InputMoisture __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float moisture() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createInputMoisture(FlatBufferBuilder builder,
      float moisture) {
    builder.startObject(1);
    InputMoisture.addMoisture(builder, moisture);
    return InputMoisture.endInputMoisture(builder);
  }

  public static void startInputMoisture(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addMoisture(FlatBufferBuilder builder, float moisture) { builder.addFloat(0, moisture, 0.0f); }
  public static int endInputMoisture(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

